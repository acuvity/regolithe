{
    {{ $latestVersion := .Spec.LatestAttributesVersion -}}
    "title": "{{ .Spec.Model.EntityName }}",
    "$friendlyName": "{{ .Spec.Model.FriendlyName }}",
    "$friendlyNamePlural": "{{ .Spec.Model.FriendlyNamePlural }}",
    "type": "object",
    "description": "{{ escapeNewLines .Spec.Model.Description }}",
    "properties": {
    {{- range $idxAttr, $attr := .Spec.ExposedAttributes $latestVersion -}}
    {{- $attrName := $attr.ConvertedName }}
    {{- if $attr.ExposedName }}
    {{- $attrName = $attr.ExposedName }}
    {{- end }}
    {{- if $idxAttr -}},{{- end }}
    "{{ $attrName }}": {
    "title": "{{ $attrName }}",
    "$friendlyName": "{{ $attr.FriendlyName }}",
    "description": "{{ escapeNewLines $attr.Description }}",
    {{- /* ==== Type ==== */ -}}
    {{- $type := convertType $attr.Type -}}
    {{ if $attr.AllowedChoices }}
    "enum": [
        {{- range $idxChoice, $choice := $attr.AllowedChoices -}}
        {{- if $idxChoice -}}, {{ end -}}
        "{{ $choice }}"
        {{- end -}}
    ]
    {{- else if eq $type "$external" }}
        {{ stripFirstLevelBrackets $attr.ConvertedType }}
    {{- else if eq $type "$list" }}
    "type": "array"
    {{- if $attr.SubType }},
    "items": {
        {{ toJSType $attr.SubType .Required }}
    }
    {{- end }}
    {{- else if eq $type "$map" }}
    "type": "object"
    {{- if $attr.SubType -}},
    "additionalProperties": {
        {{ toJSType $attr.SubType .Required }}
    }
    {{- else -}},
    "additionalProperties": true
    {{- end }}
    {{- else if eq $type "$ref" }}
    {{ toJSType $attr.SubType .Required }}
    {{- else }}
    {{ toJSType $type .Required }}
    {{- end }}

    {{- /* ==== Other properties ==== */ -}}
    {{- if $attr.AllowedChars -}},
    "pattern": "{{ convertRegexp $attr.AllowedChars $attr.Required }}"
    {{- end -}}
    {{- if $attr.MaxLength -}},
    "maxLength": {{ $attr.MaxLength }}
    {{- end -}}
    {{- if $attr.MinLength -}},
    "minLength": {{ $attr.MinLength }}
    {{- end -}}
    {{- if $attr.MaxValue -}},
    "maximum": {{ $attr.MaxValue }}
    {{- end -}}
    {{- if $attr.MinValue -}},
    "minimum": {{ $attr.MinValue }}
    {{- end -}}
    {{ "" }}

    {{- /* ==== Metadata: Not a JSON schema keyword but kept for information  ==== */ -}}
    {{- if $attr.Required -}},
    "$required": true {{- /* JSON schema uses an array at "required" keyword at the parent */ -}}
    {{- end -}}
    {{- if $attr.ReadOnly -}},
    "$readOnly": true
    {{- end -}}
    {{- if $attr.CreationOnly -}},
    "$creationOnly": true
    {{- end -}}
    {{- if not (isNil $attr.DefaultValue) -}},
    "$defaultValue": {{ $attr.DefaultValue | jsonStringify }}
    {{- end -}}
    {{ "" }}
    }
    {{- end }}
    },
    "additionalProperties": false,
    "required": [
        {{- with .Spec.ExposedAttributes $latestVersion -}}
        {{- $first := true -}}
        {{- range $attribute := . }}
        {{- if $attribute.Required -}}
            {{- if not $first -}}, {{ end -}}
            {{- $first = false -}}
            "{{ $attribute.ConvertedName }}"
        {{- end -}}
        {{- end -}}
        {{- end -}}
    ],

    {{- /* ==== Metadata: Not a JSON schema keyword but kept for information  ==== */ -}}
    {{- "" }}
    "$modelName": "{{ .Spec.Model.EntityName }}",
    "$modelRestName": "{{ .Spec.Model.RestName }}",
    "$modelResourceName": "{{ .Spec.Model.ResourceName }}",
    "$modelPackage": "{{ .Spec.Model.Package }}",
    "$extends": [
        {{- range $idxExtend, $extend := .Spec.Model.Extends -}}
        {{- if $idxExtend -}}, {{ end -}}
        "{{ $extend }}"
        {{- end -}}
    ]
}
